class EvilController 
{
ArrayList<EvilHead> eh,dead;
boolean left,b_spawned;
Timer t1;
int totalenemycount,enemyspawned,i,wave_id,j,deadstart,kills,highscore;
public EvilController()
{ 
  highscore=0;
  b_spawned=false;
totalenemycount=0;
enemyspawned=0;
wave_id=1;
i=0;
j=0;
eh=new ArrayList<EvilHead>();
dead=new ArrayList<EvilHead>();
left=true;
t1=new Timer();
}

public void playDead()
{
for(j=0;j<=dead.size()-1;j++)
{
if(dead.get(j).evilDead())
{
dead.remove(j);
}
}
}

public void play(NinjaControl nc,NinjaLevel nl,HUD hud)
{
  //text(str(totalenemycount),60,60);
if(!b_spawned)
{
if(totalenemycount>enemyspawned && t1.delayTime(500))
{

  enemyspawned++;
  if(left)
  {
eh.add(new EvilHead(true,new PVector(20,displayHeight/2),new PVector(10,0)));  
left=false;  
}
else
{
eh.add(new EvilHead(false,new PVector(displayWidth-20,displayHeight/2),new PVector(10,0)));
left=true;
}}

else if(totalenemycount<=enemyspawned)
b_spawned=true;  
}
if(totalenemycount<=enemyspawned && eh.size()==0 && t1.delayTime(4000))
{
totalenemycount=enemyspawned+2;
if(totalenemycount>=14)
totalenemycount=14;
enemyspawned=0;
b_spawned=false;
}
else
{
for(i=0;i<=eh.size()-1;i++)
{
eh.get(i).spawn();
eh.get(i).createCollision();
eh.get(i).enemyRun();
if(eh.get(i).evilCollision(nl.artifactpos))
{
dead.add(eh.get(i));
//deadstart=1;
eh.remove(i);
hud.updateHealth(nl.takeDamage(-10));
}
}
}if(dead.size()!=0)
  {
    playDead();
  }//text(str(enemyspawned),50,50);
}
}