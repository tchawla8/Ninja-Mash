class HUD 
{
PImage hudmat[];
int hwidth;
int icehudwidth;
float clickPlayXl,clickPlayXr,clickPlayYt,clickPlayYb,clickExitXl,clickExitXr,clickExitYt,clickExitYb;
PVector vplay,vexit,vcover;
  public HUD()
{
hudmat=new PImage[10];
hudmat[0]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\HealthCap.PNG");
hudmat[1]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\HealthBar.PNG");
hudmat[2]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\button_play.PNG");
hudmat[3]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\button_exit.PNG");
hudmat[4]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\cover.PNG");
hudmat[5]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\HShuriken.PNG");
hudmat[6]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\HIceWall.PNG");
hudmat[7]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\HWind.PNG");
hudmat[8]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\IceWallHealthCap.PNG");
hudmat[9]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\hud\\IceWallHealthBar.PNG");
/*hudmat[0]=loadImage("C:\\Users\\TC0C44772\\Desktop\\hud\\HealthCap.PNG");
hudmat[1]=loadImage("C:\\Users\\TC0C44772\\Desktop\\hud\\HealthBar.PNG");*/
vplay=new PVector(displayWidth/2-300,displayHeight/2+200);
vexit=new PVector(displayWidth/2+300,displayHeight/2+200);
vcover=new PVector(displayWidth/2,displayHeight/2);
clickPlayXl=vplay.x-hudmat[2].width/2;
clickPlayXr=clickPlayXl+hudmat[2].width;
clickPlayYt=vplay.y-hudmat[2].height/2;
clickPlayYb=clickPlayYt+hudmat[2].height;
clickExitXl=vexit.x-hudmat[3].width/2;
clickExitXr=clickExitXl+hudmat[3].width;
clickExitYt=vexit.y-hudmat[3].height/2;
clickExitYb=clickExitYt+hudmat[3].height;
hwidth=hudmat[1].width/100;
icehudwidth=hudmat[9].width/100;
}

public void displayHud()
{
 
image(hudmat[1],199,106);
image(hudmat[0],200,101);
}

public void displayWeapons(NinjaControl nc)
{fill(255,255,255);
switch(nc.w)
{
case 0:image(hudmat[5],displayWidth-200,100);
text(str(nc.shuriken_num),displayWidth-200,150);
break;
case 1:image(hudmat[6],displayWidth-200,100);
text(str(nc.iceWall_num),displayWidth-200,150);
break;
case 2:image(hudmat[7],displayWidth-200,100);
break;
}
}
public void displayKills(EvilController ec)
{
fill(255,255,255);  
text(str(ec.kills),displayWidth/2,60);
text(str(ec.highscore),displayWidth/2+100,60);
fill(255,0,0);
text("kills",displayWidth/2-200,60);
}
public boolean displayCheckMenu()
{
image(hudmat[4],vcover.x,vcover.y);
image(hudmat[2],vplay.x,vplay.y);
image(hudmat[3],vexit.x,vexit.y);
if(mousePressed && mouseX>clickPlayXl&&mouseX<clickPlayXr&&mouseY>clickPlayYt&&mouseY<clickPlayYb)
{
return true;
}
else if( mousePressed && mouseX>clickExitXl&&mouseX<clickExitXr&&mouseY>clickExitYt&&mouseY<clickExitYb)
{exit();
return false;
}
else
{return false;
}
}
public void displayIceWallHealth(PVector ice_pos)
{
image(hudmat[9],ice_pos.x,ice_pos.y-50);
image(hudmat[8],ice_pos.x,ice_pos.y-50);
}
public void updateIceWallHealth(int iceWallHealth)
{
hudmat[9].width=icehudwidth*iceWallHealth;
}
public void updateHealth(int amount)
{
hudmat[1].width=hwidth*amount;
}
}