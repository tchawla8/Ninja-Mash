class NinjaLevel
{
PImage map[];
Animate startupMovie;
int ArtifactHealth;  
PVector artifactpos,startup;
  public NinjaLevel()
{
map=new PImage[4];
map[0]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\level_design\\landscape.png");
map[1]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\level_design\\DragonHead.png");
map[2]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\level_design\\Artifact.png");
map[3]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\level_design\\landscapetrees.PNG");
startupMovie=new Animate("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\animation\\startscreen\\start000",143);
startup=new PVector(displayWidth/2,displayHeight/2);
//map[1]=loadImage("C:\\Users\\Matrix\\Documents\\Processing\\ninja_mash\\ImageCode\\level_design\\map1.PNG");
//map[0]=loadImage("C:\\Users\\TC0C44772\\Desktop\\landscape.png");
//map[1]=loadImage("C:\\Users\\TC0C44772\\Desktop\\map1.PNG");
//map[2]=loadImage("C:\\Users\\TC0C44772\\Desktop\\yinyang.png");
artifactpos=new PVector(displayWidth/2,displayHeight/2);
ArtifactHealth=100;
}

public void loadLevel()
{
//image(map[1],displayWidth/2,displayHeight/2+200);

image(map[0],displayWidth/2,displayHeight/2-150);
image(map[2],displayWidth/2,displayHeight/2-30);
//image(map[2],artifactpos.x,artifactpos.y);
//map[2].width=100;
//map[2].height=100;
}
public void loadDragon()
{
image(map[1],displayWidth-50,displayHeight/2-20);
pushMatrix();
scale(-1,1);
image(map[1],-50,displayHeight/2-20);
popMatrix();
image(map[3],displayWidth/2,displayHeight/2-150);
}
public int takeDamage(int amount)
{
ArtifactHealth+=amount;
return ArtifactHealth;
}

public boolean checkArtifactHealth()
{
if(ArtifactHealth<=0)
{
return true;
}
else if(ArtifactHealth>=100)
{
  ArtifactHealth=100;
return false;
}
else
return false;
}

public boolean startupMovie()
{
startupMovie.display(false,startup);
if(startupMovie.checkAnimationEnd())
return true;
else
return false;
}

}
